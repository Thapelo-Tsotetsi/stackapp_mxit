<?php

/**
 * BaseStackappJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $type
 * @property string $company
 * @property string $logo
 * @property string $url
 * @property string $position
 * @property string $location
 * @property string $description
 * @property string $requirements_one
 * @property string $requirements_two
 * @property string $requirements_three
 * @property string $how_to_apply
 * @property string $token
 * @property boolean $is_public
 * @property boolean $is_activated
 * @property string $email
 * @property timestamp $expires_at
 * @property StackappCategory $StackappCategory
 * 
 * @method integer          getCategoryId()         Returns the current record's "category_id" value
 * @method string           getType()               Returns the current record's "type" value
 * @method string           getCompany()            Returns the current record's "company" value
 * @method string           getLogo()               Returns the current record's "logo" value
 * @method string           getUrl()                Returns the current record's "url" value
 * @method string           getPosition()           Returns the current record's "position" value
 * @method string           getLocation()           Returns the current record's "location" value
 * @method string           getDescription()        Returns the current record's "description" value
 * @method string           getRequirementsOne()    Returns the current record's "requirements_one" value
 * @method string           getRequirementsTwo()    Returns the current record's "requirements_two" value
 * @method string           getRequirementsThree()  Returns the current record's "requirements_three" value
 * @method string           getHowToApply()         Returns the current record's "how_to_apply" value
 * @method string           getToken()              Returns the current record's "token" value
 * @method boolean          getIsPublic()           Returns the current record's "is_public" value
 * @method boolean          getIsActivated()        Returns the current record's "is_activated" value
 * @method string           getEmail()              Returns the current record's "email" value
 * @method timestamp        getExpiresAt()          Returns the current record's "expires_at" value
 * @method StackappCategory getStackappCategory()   Returns the current record's "StackappCategory" value
 * @method StackappJob      setCategoryId()         Sets the current record's "category_id" value
 * @method StackappJob      setType()               Sets the current record's "type" value
 * @method StackappJob      setCompany()            Sets the current record's "company" value
 * @method StackappJob      setLogo()               Sets the current record's "logo" value
 * @method StackappJob      setUrl()                Sets the current record's "url" value
 * @method StackappJob      setPosition()           Sets the current record's "position" value
 * @method StackappJob      setLocation()           Sets the current record's "location" value
 * @method StackappJob      setDescription()        Sets the current record's "description" value
 * @method StackappJob      setRequirementsOne()    Sets the current record's "requirements_one" value
 * @method StackappJob      setRequirementsTwo()    Sets the current record's "requirements_two" value
 * @method StackappJob      setRequirementsThree()  Sets the current record's "requirements_three" value
 * @method StackappJob      setHowToApply()         Sets the current record's "how_to_apply" value
 * @method StackappJob      setToken()              Sets the current record's "token" value
 * @method StackappJob      setIsPublic()           Sets the current record's "is_public" value
 * @method StackappJob      setIsActivated()        Sets the current record's "is_activated" value
 * @method StackappJob      setEmail()              Sets the current record's "email" value
 * @method StackappJob      setExpiresAt()          Sets the current record's "expires_at" value
 * @method StackappJob      setStackappCategory()   Sets the current record's "StackappCategory" value
 * 
 * @package    stackapp_v2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStackappJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stackapp_job');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('position', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('requirements_one', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('requirements_two', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('requirements_three', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('how_to_apply', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('expires_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StackappCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}